public class Solution {
    int maxLevel = 1;
    TreeNode leftNode = null;
    
    public int findBottomLeftValue(TreeNode root) {
        this.leftNode = root;
        
        findBottomLeftValue(root, 1);
        
        return this.leftNode.val;
    }
    
    public void findBottomLeftValue(TreeNode root, int currentLevel) 
    {
        if (root == null)
        {
            return;
        }

        if (currentLevel > this.maxLevel)
        {
            this.maxLevel = currentLevel;
            
            if (root.left == null && root.right == null)
            {
                leftNode = root;
            }
        }
        
        findBottomLeftValue(root.left, currentLevel + 1);
        findBottomLeftValue(root.right, currentLevel + 1);
    } 
}


Solution.java:244: error: incompatible types: boolean cannot be converted to int
          return object1.ratio > object2.ratio;
                               ^
Solution.java:250: error: cannot find symbol
      System.out.println(list.get(i));
                         ^
  symbol:   variable list
  location: class Solution
2 errors

8142 2073188752
4180 4361808142

function passTimeoutFunc(func) {
  setTimeout(func, 1000);
}

function callTimeoutFunc(func) {
  return passTimeoutFunc(func);
}